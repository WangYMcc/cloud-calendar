<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group.cc.df.dao.DfFormFieldMapper">
  <resultMap id="BaseResultMap" type="group.cc.df.model.DfFormField">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="form_id" jdbcType="INTEGER" property="formId" />
    <result column="label" jdbcType="VARCHAR" property="label" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="VARCHAR" property="type" />
    <result column="value" jdbcType="VARCHAR" property="value" />
    <result column="parent_id" jdbcType="INTEGER" property="parentId" />
    <result column="display_index" jdbcType="INTEGER" property="displayIndex" />
  </resultMap>

  <insert id="saveFormField" keyProperty="id" useGeneratedKeys="true" parameterType="group.cc.df.model.DfFormField">
    INSERT INTO df_form_field(form_id, label, name, type, value, parent_id, display_index, `key`, model) VALUES
    (#{formId}, #{label}, #{name}, #{type}, #{value}, #{parentId}, #{displayIndex}, #{key}, #{model})
  </insert>

  <select id="findDynamicFormFieldsByFormId" parameterType="Integer" resultType="group.cc.df.model.DfFormField">
    SELECT
      id,
      form_id,
      label,
      name,
      type,
      value,
      parent_id,
      display_index,
      `key`,
      model
    FROM
      df_form_field
    WHERE
      form_id = #{formId}
    ORDER BY display_index
  </select>

  <update id="updateFormField" parameterType="group.cc.df.model.DfFormField">
    UPDATE df_form_field SET form_id = #{formId}, label = #{label}, `name` = #{name}, `type` = #{type},
    `value` = #{value}, parent_id = #{parentId}, display_index = #{displayIndex}, `key` = #{key},
    model = #{model} WHERE id = #{id}
  </update>

  <select id="findUselessFormFields" resultType="group.cc.df.model.DfFormField">
    SELECT id, form_id, label, name, type, value, parent_id, display_index, `key`, model FROM df_form_field
    WHERE (id NOT IN
    <foreach collection="fieldIdList" item="item" index="index" open="(" separator="," close=")">
      #{item}
    </foreach>)
    AND form_id = #{formId}
  </select>

  <delete id="deleteFormFieldById" parameterType="java.lang.Integer">
    DELETE FROM df_form_field WHERE id = #{formFieldId}
  </delete>

  <select id="findDynamicFormFieldListByParentId" resultType="group.cc.df.model.DfFormField">
    SELECT id, form_id, label, name, type, value, parent_id, display_index, `key`, model FROM df_form_field
    WHERE parent_id = #{parentId}
  </select>

  <insert id="saveCollectFormField" keyProperty="id" useGeneratedKeys="true" parameterType="group.cc.df.model.DfFormField">
    INSERT INTO df_collect_form_field(collect_form_id, label, name, type, value, parent_id, display_index, `key`, model) VALUES
    (#{formId}, #{label}, #{name}, #{type}, #{value}, #{parentId}, #{displayIndex}, #{key}, #{model})
  </insert>

  <select id="findCollectFormFieldByCollectFormId" resultType="group.cc.df.model.DfFormField">
    SELECT id AS id, collect_form_id AS formId, label AS label, name AS name, type AS type, value AS value,
    parent_id AS parentId, display_index AS displayIndex, `key` AS key, model AS model  FROM df_collect_form_field
    WHERE collect_form_id = #{formId} ORDER BY id
  </select>

  <delete id="deleteCollectFormFieldByCollectFormId">
    DELETE FROM df_collect_form_field WHERE collect_form_id = #{collectFormId}
  </delete>
</mapper>