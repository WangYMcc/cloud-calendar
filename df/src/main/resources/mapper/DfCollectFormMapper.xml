<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="group.cc.df.dao.DfCollectFormMapper">
  <resultMap id="BaseResultMap" type="group.cc.df.model.DfCollectForm">
    <!--
      WARNING - @mbg.generated
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="form_id" jdbcType="INTEGER" property="formId" />
    <result column="employee_id" jdbcType="INTEGER" property="employeeId" />
    <result column="submit_time" jdbcType="TIMESTAMP" property="submitTime" />
  </resultMap>

  <insert id="saveCollectForm" useGeneratedKeys="true" keyProperty="id" parameterType="group.cc.df.model.DfCollectForm">
    INSERT INTO df_collect_form(form_id, employee_id, submit_time)
    VALUES(#{formId}, #{employeeId}, #{submitTime})
  </insert>

  <select id="findCollectFormByEmployeeIdAndFormId" resultType="group.cc.df.model.DfCollectForm">
    SELECT id AS id, form_id AS formId, employee_id AS employeeId, submit_time AS submitTime FROM df_collect_form
    WHERE employee_id = #{employeeId} AND form_id = #{formId}
  </select>

  <select id="findCollectFormByCondition" resultType="group.cc.df.model.DfCollectForm">
    SELECT id AS id, form_id AS formId, employee_id AS employeeId, submit_time AS  submitTime FROM df_collect_form
    WHERE 1 = 1
    <if test="userId != null and userId != ''">
      AND employee_id = #{userId}
    </if>
    <if test="formId != null and formId != ''">
      AND form_id = #{formId}
    </if>
    ORDER BY submit_time DESC
    LIMIT #{offset}, #{pageSize}
  </select>

  <select id="findCollectFormCountByCondition" resultType="java.lang.Integer">
    SELECT COUNT(1) FROM df_collect_form WHERE 1 = 1
    <if test="userId != null and userId != ''">
      AND employee_id = #{userId}
    </if>
    <if test="formId != null and formId != ''">
      AND form_id = #{formId}
    </if>
  </select>

  <select id="findLikeFormNameAndSubmiterId" resultMap="simpleCollectDTOResultMap">
    SELECT form.id AS id, form.name AS name, collect.id AS collectId, user.id AS userId FROM df_collect_form AS collect
    LEFT JOIN df_dynamic_form AS form ON collect.form_id = form.id
    LEFT JOIN df_user AS user ON collect.employee_id = user.id
    WHERE form.name LIKE CONCAT('%', #{formName} ,'%') AND user.id = #{submiterId}
  </select>

  <resultMap id="simpleCollectDTOResultMap" type="group.cc.df.dto.DfCollectFormDTO">
    <association property="collectForm" javaType="group.cc.df.model.DfCollectForm">
      <id column="collectId" property="id"/>
    </association>
    <association property="dynamicForm" javaType="group.cc.df.model.DfDynamicForm">
      <id column="id" property="id"/>
      <result column="name" property="name"/>
    </association>
    <association property="submiter" javaType="group.cc.df.model.DfUser">
      <id column="userId" property="id"/>
    </association>
  </resultMap>
</mapper>